{"version":3,"sources":["turbopack:///[project]/apps/safety-lms/src/app/api/quiz-analytics/route.ts","turbopack:///[project]/node_modules/.pnpm/next@15.5.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/next/dist/esm/build/templates/app-route.js"],"sourcesContent":["import { NextRequest, NextResponse } from \"next/server\";\nimport { serverAuth } from \"@/lib/supabase/server\";\nimport {\n  createStrictApiResponse,\n  createStrictApiErrorResponse,\n  CURRENT_API_VERSION,\n} from \"@/lib/types/api-contracts\";\n\nexport async function GET(request: NextRequest) {\n  try {\n    // Check authentication\n    const { user, profile } = await serverAuth.getCurrentUser();\n    if (!user) {\n      return NextResponse.json(\n        createStrictApiErrorResponse(\n          \"AUTHENTICATION_ERROR\",\n          \"Authentication required\",\n          undefined,\n          CURRENT_API_VERSION,\n          {\n            requestId: crypto.randomUUID(),\n            path: request.nextUrl.pathname,\n            method: request.method,\n          }\n        ),\n        { status: 401 }\n      );\n    }\n\n    const { searchParams } = new URL(request.url);\n    const sectionId = searchParams.get(\"sectionId\");\n    const courseId = searchParams.get(\"courseId\");\n\n    // Import the database instance\n    const { db } = await import(\"@/lib/db\");\n    const { quizAttempts } = await import(\"@/lib/db/schema/quiz-attempts\");\n    const { quizQuestions } = await import(\"@/lib/db/schema/quiz-questions\");\n    const { courseSections } = await import(\"@/lib/db/schema/course-sections\");\n    const { courses } = await import(\"@/lib/db/schema/courses\");\n    const { eq, and, desc } = await import(\"drizzle-orm\");\n\n    // Build query conditions based on user role and plant access\n    const conditions = [];\n    \n    if (profile?.role === \"admin\") {\n      // Admins can see all data\n    } else if (profile?.role === \"manager\") {\n      // Managers can see data for their plant\n      if (profile.plantId) {\n        // Add plant filter for managers\n        // This would require joining with user profiles to filter by plant\n      }\n    } else {\n      // Employees can only see their own data\n      conditions.push(eq(quizAttempts.userId, user.id));\n    }\n\n    if (sectionId) {\n      // Join with quiz questions to filter by section\n      const sectionQuestions = await db.query.quizQuestions.findMany({\n        where: eq(quizQuestions.sectionId, sectionId),\n        columns: { id: true },\n      });\n      \n      const questionIds = sectionQuestions.map(q => q.id);\n      if (questionIds.length > 0) {\n        conditions.push(\n          // This would need to be handled with a proper join or subquery\n          // For now, we'll fetch all attempts and filter in memory\n        );\n      }\n    }\n\n    // Fetch quiz attempts with related data\n    const attempts = await db.query.quizAttempts.findMany({\n      with: {\n        quizQuestion: {\n          with: {\n            section: {\n              with: {\n                course: true,\n              },\n            },\n          },\n        },\n      },\n      orderBy: [desc(quizAttempts.attemptedAt)],\n    });\n\n    // Filter by plant access if user is manager\n    // Note: Quiz attempts are already filtered by user, and users belong to plants\n    // So plant-based filtering is implicit through the user relationship\n    let filteredAttempts = attempts;\n\n    // Filter by section if specified\n    if (sectionId) {\n      filteredAttempts = filteredAttempts.filter(attempt => \n        attempt.quizQuestion?.sectionId === sectionId\n      );\n    }\n\n    // Filter by course if specified\n    if (courseId) {\n      filteredAttempts = filteredAttempts.filter(attempt => \n        attempt.quizQuestion?.section?.courseId === courseId\n      );\n    }\n\n    // Calculate analytics\n    const analytics = {\n      totalAttempts: filteredAttempts.length,\n      totalUsers: new Set(filteredAttempts.map(a => a.userId)).size,\n      totalQuestions: new Set(filteredAttempts.map(a => a.quizQuestionId)).size,\n      correctAttempts: filteredAttempts.filter(a => a.isCorrect).length,\n      incorrectAttempts: filteredAttempts.filter(a => !a.isCorrect).length,\n      accuracyRate: filteredAttempts.length > 0 \n        ? (filteredAttempts.filter(a => a.isCorrect).length / filteredAttempts.length) * 100 \n        : 0,\n      averageAttemptsPerQuestion: filteredAttempts.length > 0 \n        ? filteredAttempts.length / new Set(filteredAttempts.map(a => a.quizQuestionId)).size \n        : 0,\n      questions: {},\n      sections: {},\n      courses: {},\n    };\n\n    // Group by question\n    const questionGroups = new Map();\n    filteredAttempts.forEach(attempt => {\n      const questionId = attempt.quizQuestionId;\n      if (!questionGroups.has(questionId)) {\n        questionGroups.set(questionId, {\n          questionId,\n          questionText: attempt.quizQuestion?.questionText,\n          sectionTitle: attempt.quizQuestion?.section?.title,\n          courseTitle: attempt.quizQuestion?.section?.course?.title,\n          attempts: [],\n          correctAttempts: 0,\n          incorrectAttempts: 0,\n        });\n      }\n      const group = questionGroups.get(questionId);\n      group.attempts.push(attempt);\n      if (attempt.isCorrect) {\n        group.correctAttempts++;\n      } else {\n        group.incorrectAttempts++;\n      }\n    });\n\n    analytics.questions = Object.fromEntries(\n      Array.from(questionGroups.entries()).map(([id, data]) => [\n        id,\n        {\n          ...data,\n          totalAttempts: data.attempts.length,\n          accuracyRate: data.attempts.length > 0 \n            ? (data.correctAttempts / data.attempts.length) * 100 \n            : 0,\n          attempts: undefined, // Remove raw attempts for cleaner response\n        },\n      ])\n    );\n\n    // Group by section\n    const sectionGroups = new Map();\n    filteredAttempts.forEach(attempt => {\n      const sectionId = attempt.quizQuestion?.sectionId;\n      if (!sectionId) return;\n      \n      if (!sectionGroups.has(sectionId)) {\n        sectionGroups.set(sectionId, {\n          sectionId,\n          sectionTitle: attempt.quizQuestion?.section?.title,\n          courseTitle: attempt.quizQuestion?.section?.course?.title,\n          totalAttempts: 0,\n          correctAttempts: 0,\n          uniqueUsers: new Set(),\n          uniqueQuestions: new Set(),\n        });\n      }\n      const group = sectionGroups.get(sectionId);\n      group.totalAttempts++;\n      group.uniqueUsers.add(attempt.userId);\n      group.uniqueQuestions.add(attempt.quizQuestionId);\n      if (attempt.isCorrect) {\n        group.correctAttempts++;\n      }\n    });\n\n    analytics.sections = Object.fromEntries(\n      Array.from(sectionGroups.entries()).map(([id, data]) => [\n        id,\n        {\n          ...data,\n          accuracyRate: data.totalAttempts > 0 \n            ? (data.correctAttempts / data.totalAttempts) * 100 \n            : 0,\n          uniqueUsers: data.uniqueUsers.size,\n          uniqueQuestions: data.uniqueQuestions.size,\n        },\n      ])\n    );\n\n    // Group by course\n    const courseGroups = new Map();\n    filteredAttempts.forEach(attempt => {\n      const courseId = attempt.quizQuestion?.section?.courseId;\n      if (!courseId) return;\n      \n      if (!courseGroups.has(courseId)) {\n        courseGroups.set(courseId, {\n          courseId,\n          courseTitle: attempt.quizQuestion?.section?.course?.title,\n          totalAttempts: 0,\n          correctAttempts: 0,\n          uniqueUsers: new Set(),\n          uniqueQuestions: new Set(),\n          uniqueSections: new Set(),\n        });\n      }\n      const group = courseGroups.get(courseId);\n      group.totalAttempts++;\n      group.uniqueUsers.add(attempt.userId);\n      group.uniqueQuestions.add(attempt.quizQuestionId);\n      group.uniqueSections.add(attempt.quizQuestion?.sectionId);\n      if (attempt.isCorrect) {\n        group.correctAttempts++;\n      }\n    });\n\n    analytics.courses = Object.fromEntries(\n      Array.from(courseGroups.entries()).map(([id, data]) => [\n        id,\n        {\n          ...data,\n          accuracyRate: data.totalAttempts > 0 \n            ? (data.correctAttempts / data.totalAttempts) * 100 \n            : 0,\n          uniqueUsers: data.uniqueUsers.size,\n          uniqueQuestions: data.uniqueQuestions.size,\n          uniqueSections: data.uniqueSections.size,\n        },\n      ])\n    );\n\n    return NextResponse.json(\n      createStrictApiResponse(analytics, CURRENT_API_VERSION, {\n        timestamp: new Date().toISOString(),\n        requestId: crypto.randomUUID(),\n      }),\n      { status: 200 }\n    );\n  } catch (error) {\n    console.error(\"Quiz analytics GET API error:\", error);\n    return NextResponse.json(\n      createStrictApiErrorResponse(\n        \"INTERNAL_ERROR\",\n        \"An unexpected error occurred\",\n        undefined,\n        CURRENT_API_VERSION,\n        {\n          requestId: crypto.randomUUID(),\n          path: request.nextUrl.pathname,\n          method: request.method,\n        }\n      ),\n      { status: 500 }\n    );\n  }\n}\n","import { AppRouteRouteModule } from \"next/dist/esm/server/route-modules/app-route/module.compiled\";\nimport { RouteKind } from \"next/dist/esm/server/route-kind\";\nimport { patchFetch as _patchFetch } from \"next/dist/esm/server/lib/patch-fetch\";\nimport { getRequestMeta } from \"next/dist/esm/server/request-meta\";\nimport { getTracer, SpanKind } from \"next/dist/esm/server/lib/trace/tracer\";\nimport { normalizeAppPath } from \"next/dist/esm/shared/lib/router/utils/app-paths\";\nimport { NodeNextRequest, NodeNextResponse } from \"next/dist/esm/server/base-http/node\";\nimport { NextRequestAdapter, signalFromNodeResponse } from \"next/dist/esm/server/web/spec-extension/adapters/next-request\";\nimport { BaseServerSpan } from \"next/dist/esm/server/lib/trace/constants\";\nimport { getRevalidateReason } from \"next/dist/esm/server/instrumentation/utils\";\nimport { sendResponse } from \"next/dist/esm/server/send-response\";\nimport { fromNodeOutgoingHttpHeaders, toNodeOutgoingHttpHeaders } from \"next/dist/esm/server/web/utils\";\nimport { getCacheControlHeader } from \"next/dist/esm/server/lib/cache-control\";\nimport { INFINITE_CACHE, NEXT_CACHE_TAGS_HEADER } from \"next/dist/esm/lib/constants\";\nimport { NoFallbackError } from \"next/dist/esm/shared/lib/no-fallback-error.external\";\nimport { CachedRouteKind } from \"next/dist/esm/server/response-cache\";\nimport * as userland from \"INNER_APP_ROUTE\";\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new AppRouteRouteModule({\n    definition: {\n        kind: RouteKind.APP_ROUTE,\n        page: \"/api/quiz-analytics/route\",\n        pathname: \"/api/quiz-analytics\",\n        filename: \"route\",\n        bundlePath: \"\"\n    },\n    distDir: process.env.__NEXT_RELATIVE_DIST_DIR || '',\n    relativeProjectDir: process.env.__NEXT_RELATIVE_PROJECT_DIR || '',\n    resolvedPagePath: \"[project]/apps/safety-lms/src/app/api/quiz-analytics/route.ts\",\n    nextConfigOutput,\n    userland\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return _patchFetch({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\nexport { routeModule, workAsyncStorage, workUnitAsyncStorage, serverHooks, patchFetch,  };\nexport async function handler(req, res, ctx) {\n    var _nextConfig_experimental;\n    let srcPage = \"/api/quiz-analytics/route\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (process.env.TURBOPACK) {\n        srcPage = srcPage.replace(/\\/index$/, '') || '/';\n    } else if (srcPage === '/index') {\n        // we always normalize /index specifically\n        srcPage = '/';\n    }\n    const multiZoneDraftMode = process.env.__NEXT_MULTI_ZONE_DRAFT_MODE;\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage,\n        multiZoneDraftMode\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return null;\n    }\n    const { buildId, params, nextConfig, isDraftMode, prerenderManifest, routerServerContext, isOnDemandRevalidate, revalidateOnlyGenerated, resolvedPathname } = prepareResult;\n    const normalizedSrcPage = normalizeAppPath(srcPage);\n    let isIsr = Boolean(prerenderManifest.dynamicRoutes[normalizedSrcPage] || prerenderManifest.routes[resolvedPathname]);\n    if (isIsr && !isDraftMode) {\n        const isPrerendered = Boolean(prerenderManifest.routes[resolvedPathname]);\n        const prerenderInfo = prerenderManifest.dynamicRoutes[normalizedSrcPage];\n        if (prerenderInfo) {\n            if (prerenderInfo.fallback === false && !isPrerendered) {\n                throw new NoFallbackError();\n            }\n        }\n    }\n    let cacheKey = null;\n    if (isIsr && !routeModule.isDev && !isDraftMode) {\n        cacheKey = resolvedPathname;\n        // ensure /index and / is normalized to one key\n        cacheKey = cacheKey === '/index' ? '/' : cacheKey;\n    }\n    const supportsDynamicResponse = // If we're in development, we always support dynamic HTML\n    routeModule.isDev === true || // If this is not SSG or does not have static paths, then it supports\n    // dynamic HTML.\n    !isIsr;\n    // This is a revalidation request if the request is for a static\n    // page and it is not being resumed from a postponed render and\n    // it is not a dynamic RSC request then it is a revalidation\n    // request.\n    const isRevalidate = isIsr && !supportsDynamicResponse;\n    const method = req.method || 'GET';\n    const tracer = getTracer();\n    const activeSpan = tracer.getActiveScopeSpan();\n    const context = {\n        params,\n        prerenderManifest,\n        renderOpts: {\n            experimental: {\n                cacheComponents: Boolean(nextConfig.experimental.cacheComponents),\n                authInterrupts: Boolean(nextConfig.experimental.authInterrupts)\n            },\n            supportsDynamicResponse,\n            incrementalCache: getRequestMeta(req, 'incrementalCache'),\n            cacheLifeProfiles: (_nextConfig_experimental = nextConfig.experimental) == null ? void 0 : _nextConfig_experimental.cacheLife,\n            isRevalidate,\n            waitUntil: ctx.waitUntil,\n            onClose: (cb)=>{\n                res.on('close', cb);\n            },\n            onAfterTaskError: undefined,\n            onInstrumentationRequestError: (error, _request, errorContext)=>routeModule.onRequestError(req, error, errorContext, routerServerContext)\n        },\n        sharedContext: {\n            buildId\n        }\n    };\n    const nodeNextReq = new NodeNextRequest(req);\n    const nodeNextRes = new NodeNextResponse(res);\n    const nextReq = NextRequestAdapter.fromNodeNextRequest(nodeNextReq, signalFromNodeResponse(res));\n    try {\n        const invokeRouteModule = async (span)=>{\n            return routeModule.handle(nextReq, context).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        };\n        const handleResponse = async (currentSpan)=>{\n            var _cacheEntry_value;\n            const responseGenerator = async ({ previousCacheEntry })=>{\n                try {\n                    if (!getRequestMeta(req, 'minimalMode') && isOnDemandRevalidate && revalidateOnlyGenerated && !previousCacheEntry) {\n                        res.statusCode = 404;\n                        // on-demand revalidate always sets this header\n                        res.setHeader('x-nextjs-cache', 'REVALIDATED');\n                        res.end('This page could not be found');\n                        return null;\n                    }\n                    const response = await invokeRouteModule(currentSpan);\n                    req.fetchMetrics = context.renderOpts.fetchMetrics;\n                    let pendingWaitUntil = context.renderOpts.pendingWaitUntil;\n                    // Attempt using provided waitUntil if available\n                    // if it's not we fallback to sendResponse's handling\n                    if (pendingWaitUntil) {\n                        if (ctx.waitUntil) {\n                            ctx.waitUntil(pendingWaitUntil);\n                            pendingWaitUntil = undefined;\n                        }\n                    }\n                    const cacheTags = context.renderOpts.collectedTags;\n                    // If the request is for a static response, we can cache it so long\n                    // as it's not edge.\n                    if (isIsr) {\n                        const blob = await response.blob();\n                        // Copy the headers from the response.\n                        const headers = toNodeOutgoingHttpHeaders(response.headers);\n                        if (cacheTags) {\n                            headers[NEXT_CACHE_TAGS_HEADER] = cacheTags;\n                        }\n                        if (!headers['content-type'] && blob.type) {\n                            headers['content-type'] = blob.type;\n                        }\n                        const revalidate = typeof context.renderOpts.collectedRevalidate === 'undefined' || context.renderOpts.collectedRevalidate >= INFINITE_CACHE ? false : context.renderOpts.collectedRevalidate;\n                        const expire = typeof context.renderOpts.collectedExpire === 'undefined' || context.renderOpts.collectedExpire >= INFINITE_CACHE ? undefined : context.renderOpts.collectedExpire;\n                        // Create the cache entry for the response.\n                        const cacheEntry = {\n                            value: {\n                                kind: CachedRouteKind.APP_ROUTE,\n                                status: response.status,\n                                body: Buffer.from(await blob.arrayBuffer()),\n                                headers\n                            },\n                            cacheControl: {\n                                revalidate,\n                                expire\n                            }\n                        };\n                        return cacheEntry;\n                    } else {\n                        // send response without caching if not ISR\n                        await sendResponse(nodeNextReq, nodeNextRes, response, context.renderOpts.pendingWaitUntil);\n                        return null;\n                    }\n                } catch (err) {\n                    // if this is a background revalidate we need to report\n                    // the request error here as it won't be bubbled\n                    if (previousCacheEntry == null ? void 0 : previousCacheEntry.isStale) {\n                        await routeModule.onRequestError(req, err, {\n                            routerKind: 'App Router',\n                            routePath: srcPage,\n                            routeType: 'route',\n                            revalidateReason: getRevalidateReason({\n                                isRevalidate,\n                                isOnDemandRevalidate\n                            })\n                        }, routerServerContext);\n                    }\n                    throw err;\n                }\n            };\n            const cacheEntry = await routeModule.handleResponse({\n                req,\n                nextConfig,\n                cacheKey,\n                routeKind: RouteKind.APP_ROUTE,\n                isFallback: false,\n                prerenderManifest,\n                isRoutePPREnabled: false,\n                isOnDemandRevalidate,\n                revalidateOnlyGenerated,\n                responseGenerator,\n                waitUntil: ctx.waitUntil\n            });\n            // we don't create a cacheEntry for ISR\n            if (!isIsr) {\n                return null;\n            }\n            if ((cacheEntry == null ? void 0 : (_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) !== CachedRouteKind.APP_ROUTE) {\n                var _cacheEntry_value1;\n                throw Object.defineProperty(new Error(`Invariant: app-route received invalid cache entry ${cacheEntry == null ? void 0 : (_cacheEntry_value1 = cacheEntry.value) == null ? void 0 : _cacheEntry_value1.kind}`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E701\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            if (!getRequestMeta(req, 'minimalMode')) {\n                res.setHeader('x-nextjs-cache', isOnDemandRevalidate ? 'REVALIDATED' : cacheEntry.isMiss ? 'MISS' : cacheEntry.isStale ? 'STALE' : 'HIT');\n            }\n            // Draft mode should never be cached\n            if (isDraftMode) {\n                res.setHeader('Cache-Control', 'private, no-cache, no-store, max-age=0, must-revalidate');\n            }\n            const headers = fromNodeOutgoingHttpHeaders(cacheEntry.value.headers);\n            if (!(getRequestMeta(req, 'minimalMode') && isIsr)) {\n                headers.delete(NEXT_CACHE_TAGS_HEADER);\n            }\n            // If cache control is already set on the response we don't\n            // override it to allow users to customize it via next.config\n            if (cacheEntry.cacheControl && !res.getHeader('Cache-Control') && !headers.get('Cache-Control')) {\n                headers.set('Cache-Control', getCacheControlHeader(cacheEntry.cacheControl));\n            }\n            await sendResponse(nodeNextReq, nodeNextRes, new Response(cacheEntry.value.body, {\n                headers,\n                status: cacheEntry.value.status || 200\n            }));\n            return null;\n        };\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await handleResponse(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, handleResponse));\n        }\n    } catch (err) {\n        if (!(err instanceof NoFallbackError)) {\n            await routeModule.onRequestError(req, err, {\n                routerKind: 'App Router',\n                routePath: normalizedSrcPage,\n                routeType: 'route',\n                revalidateReason: getRevalidateReason({\n                    isRevalidate,\n                    isOnDemandRevalidate\n                })\n            });\n        }\n        // rethrow so that we can handle serving error page\n        // If this is during static generation, throw the error again.\n        if (isIsr) throw err;\n        // Otherwise, send a 500 response.\n        await sendResponse(nodeNextReq, nodeNextRes, new Response(null, {\n            status: 500\n        }));\n        return null;\n    }\n}\n\n//# sourceMappingURL=app-route.js.map\n"],"names":[],"mappings":"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","ignoreList":[1]}