{
  "version": 3,
  "pages404": true,
  "caseSensitive": false,
  "basePath": "",
  "redirects": [
    {
      "source": "/:path+/",
      "destination": "/:path+",
      "internal": true,
      "statusCode": 308,
      "regex": "^(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))/$"
    }
  ],
  "headers": [],
  "rewrites": {
    "beforeFiles": [],
    "afterFiles": [],
    "fallback": []
  },
  "dynamicRoutes": [
    {
      "page": "/api/courses/[slug]/sections",
      "regex": "^/api/courses/([^/]+?)/sections(?:/)?$",
      "routeKeys": {
        "nxtPslug": "nxtPslug"
      },
      "namedRegex": "^/api/courses/(?<nxtPslug>[^/]+?)/sections(?:/)?$"
    },
    {
      "page": "/api/courses/[slug]/sections/[sectionId]/content",
      "regex": "^/api/courses/([^/]+?)/sections/([^/]+?)/content(?:/)?$",
      "routeKeys": {
        "nxtPslug": "nxtPslug",
        "nxtPsectionId": "nxtPsectionId"
      },
      "namedRegex": "^/api/courses/(?<nxtPslug>[^/]+?)/sections/(?<nxtPsectionId>[^/]+?)/content(?:/)?$"
    },
    {
      "page": "/api/translations/section/[sectionId]",
      "regex": "^/api/translations/section/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPsectionId": "nxtPsectionId"
      },
      "namedRegex": "^/api/translations/section/(?<nxtPsectionId>[^/]+?)(?:/)?$"
    },
    {
      "page": "/api/translations/[courseId]",
      "regex": "^/api/translations/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPcourseId": "nxtPcourseId"
      },
      "namedRegex": "^/api/translations/(?<nxtPcourseId>[^/]+?)(?:/)?$"
    },
    {
      "page": "/courses/[slug]",
      "regex": "^/courses/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPslug": "nxtPslug"
      },
      "namedRegex": "^/courses/(?<nxtPslug>[^/]+?)(?:/)?$"
    },
    {
      "page": "/courses/[slug]/complete",
      "regex": "^/courses/([^/]+?)/complete(?:/)?$",
      "routeKeys": {
        "nxtPslug": "nxtPslug"
      },
      "namedRegex": "^/courses/(?<nxtPslug>[^/]+?)/complete(?:/)?$"
    },
    {
      "page": "/courses/[slug]/learn",
      "regex": "^/courses/([^/]+?)/learn(?:/)?$",
      "routeKeys": {
        "nxtPslug": "nxtPslug"
      },
      "namedRegex": "^/courses/(?<nxtPslug>[^/]+?)/learn(?:/)?$"
    },
    {
      "page": "/courses/[slug]/learn/[sectionId]",
      "regex": "^/courses/([^/]+?)/learn/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPslug": "nxtPslug",
        "nxtPsectionId": "nxtPsectionId"
      },
      "namedRegex": "^/courses/(?<nxtPslug>[^/]+?)/learn/(?<nxtPsectionId>[^/]+?)(?:/)?$"
    }
  ],
  "staticRoutes": [
    {
      "page": "/",
      "regex": "^/(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/(?:/)?$"
    },
    {
      "page": "/_not-found",
      "regex": "^/_not\\-found(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/_not\\-found(?:/)?$"
    },
    {
      "page": "/auth/login",
      "regex": "^/auth/login(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/auth/login(?:/)?$"
    },
    {
      "page": "/auth/register",
      "regex": "^/auth/register(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/auth/register(?:/)?$"
    },
    {
      "page": "/courses",
      "regex": "^/courses(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/courses(?:/)?$"
    },
    {
      "page": "/dashboard",
      "regex": "^/dashboard(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/dashboard(?:/)?$"
    },
    {
      "page": "/enrollments",
      "regex": "^/enrollments(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/enrollments(?:/)?$"
    },
    {
      "page": "/favicon.ico",
      "regex": "^/favicon\\.ico(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/favicon\\.ico(?:/)?$"
    },
    {
      "page": "/plants",
      "regex": "^/plants(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/plants(?:/)?$"
    },
    {
      "page": "/progress",
      "regex": "^/progress(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/progress(?:/)?$"
    },
    {
      "page": "/reports",
      "regex": "^/reports(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/reports(?:/)?$"
    },
    {
      "page": "/settings",
      "regex": "^/settings(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/settings(?:/)?$"
    },
    {
      "page": "/users",
      "regex": "^/users(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/users(?:/)?$"
    }
  ],
  "dataRoutes": [],
  "rsc": {
    "header": "rsc",
    "varyHeader": "rsc, next-router-state-tree, next-router-prefetch, next-router-segment-prefetch",
    "prefetchHeader": "next-router-prefetch",
    "didPostponeHeader": "x-nextjs-postponed",
    "contentTypeHeader": "text/x-component",
    "suffix": ".rsc",
    "prefetchSuffix": ".prefetch.rsc",
    "prefetchSegmentHeader": "next-router-segment-prefetch",
    "prefetchSegmentSuffix": ".segment.rsc",
    "prefetchSegmentDirSuffix": ".segments"
  },
  "rewriteHeaders": {
    "pathHeader": "x-nextjs-rewritten-path",
    "queryHeader": "x-nextjs-rewritten-query"
  }
}